---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jackett
  name: jackett
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jackett
  template:
    metadata:
      labels:
        app: jackett
    spec:
      containers:
        - image: linuxserver/jackett:latest
          name: jackett
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          volumeMounts:
            - mountPath: "/config"
              name: jackett-data
          #  - mountPath: "/downloads"
          #    name: downloads
          # resources:
          #   limits:
          #     memory: "64Mi"
          #     cpu: "250m"
      volumes:
        - name: jackett-data
          persistentVolumeClaim:
            claimName: jackett-config
        #- name: downloads
        #  persistentVolumeClaim:
        #    claimName: jackett-downloads
        #    #readOnly: true
      securityContext: {}
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: jackett-downloads
#  labels:
#    type: local
#spec:
#  storageClassName: "" # force blank
#  capacity:
#    storage: 2Ti
#  accessModes:
#    - ReadWriteOnce
#    #- ReadWriteMany
#    #- ReadOnlyMany
#  hostPath:
#    path: "/mnt/data1"
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: jackett-downloads
#spec:
#  storageClassName: "" # force blank
#  volumeName: jackett-downloads
#  accessModes:
#    - ReadWriteOnce
#    #- ReadOnlyMany
#    #- ReadWriteMany
#  resources:
#    requests:
#      storage: 1Ti
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: k3d-storage-jackett
  labels:
    type: local
spec:
  storageClassName: ""
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
    #- ReadOnlyMany
    #- ReadWriteMany
  hostPath:
    path: "/srv/k3d/jackett"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jackett-config
spec:
  storageClassName: ""
  volumeName: k3d-storage-jackett
  accessModes:
    - ReadWriteOnce
    #- ReadOnlyMany
    #- ReadWriteMany
  resources:
    requests:
      storage: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jackett
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: jackett
  ports:
    - port: 80
      name: http
      targetPort: 9117
---
# dashboard.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jackett-inbound
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`sme.lt`) && PathPrefix(`/jackett`)
      kind: Rule
      middlewares: []
      #  - name: strip-prefix-jackett
      #    namespace: default
      services:
        - name: jackett
          kind: Service
          namespace: default
          port: 80
  tls:
    secretName: sme-lt-tls
#   certResolver: gandi
#   domains:
#   - main: sme.lt
