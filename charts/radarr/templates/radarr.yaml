---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr
  name: radarr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - image: linuxserver/radarr:latest
          name: radarr
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: UMASK_SET
              value: "022"
          volumeMounts:
            - mountPath: "/config"
              name: radarr-data
            - mountPath: "/downloads"
              name: downloads
          # resources:
          #   limits:
          #     memory: "64Mi"
          #     cpu: "250m"
      volumes:
        - name: radarr-data
          persistentVolumeClaim:
            claimName: radarr-config
        - name: downloads
          persistentVolumeClaim:
            claimName: radarr-downloads
            #readOnly: true
      securityContext: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-downloads
  labels:
    type: local
spec:
  storageClassName: "" # force blank
  capacity:
    storage: 2Ti
  accessModes:
    - ReadWriteOnce
    #- ReadWriteMany
    #- ReadOnlyMany
  hostPath:
    path: "/mnt/data1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-downloads
spec:
  storageClassName: "" # force blank
  volumeName: radarr-downloads
  accessModes:
    - ReadWriteOnce
    #- ReadOnlyMany
    #- ReadWriteMany
  resources:
    requests:
      storage: 1Ti
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: k3d-storage-radarr
  labels:
    type: local
spec:
  storageClassName: ""
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
    #- ReadOnlyMany
    #- ReadWriteMany
  hostPath:
    path: "/srv/k3d/radarr"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config
spec:
  storageClassName: ""
  volumeName: k3d-storage-radarr
  accessModes:
    - ReadWriteOnce
    #- ReadOnlyMany
    #- ReadWriteMany
  resources:
    requests:
      storage: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: radarr
  ports:
    - port: 80
      name: http
      targetPort: 7878
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: radarr-inbound
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`sme.lt`) && PathPrefix(`/radarr`)
      kind: Rule
      middlewares: []
      services:
        - name: radarr
          kind: Service
          namespace: default
          port: 80
  tls:
    secretName: sme-lt-tls
#   certResolver: gandi
#   domains:
#   - main: sme.lt
